---
import { state } from "../services/state.js";

let tareas = state.tasks;
let filtroActual = "todas";

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const accion = formData.get("accion");
  const tareaIndex = formData.get("tareaIndex");

  if (accion === "toggle" && tareaIndex !== null) {
    const index = Number(tareaIndex);
    state.tasks[index].completada = !state.tasks[index].completada;
    tareas = [...state.tasks];
    console.log("Cambio de estado:", state.tasks[index]);
  }

  if (accion === "limpiar") {
    const tareasEliminadas = state.tasks.filter((tarea) => tarea.completada); // Guardar las tareas completadas
    state.tasks = state.tasks.filter((tarea) => !tarea.completada); // Filtrar las tareas incompletas
    tareas = [...state.tasks]; // Actualizar la lista de tareas
    console.log("Tareas eliminadas:", tareasEliminadas); // Imprimir las tareas eliminadas
  }

  if (accion === "borrar") {
    const tareaIndex = formData.get("tareaIndex");

    if (tareaIndex !== null) {
      state.tasks.splice(Number(tareaIndex), 1);
      tareas = [...state.tasks];
      console.log("Tarea eliminada:", state.tasks);
    }
  }

  if (accion === "agregar") {
    const nuevaTarea = formData.get("nuevaTarea");
    if (nuevaTarea && typeof nuevaTarea === "string") {
      state.tasks.push({ texto: nuevaTarea.trim(), completada: false });
      tareas = [...state.tasks];
      console.log("Nueva tarea agregada:", state.tasks);
    }
  }

  const filtro = formData.get("filtro");
  if (filtro) {
    filtroActual = filtro;
  }
}

const obtenerTareasFiltradas = () => {
  if (filtroActual === "completas") {
    return tareas.filter((tarea) => tarea.completada);
  } else if (filtroActual === "incompletas") {
    return tareas.filter((tarea) => !tarea.completada);
  }
  return tareas;
};
---

<div class="gestor-tareas">
  <header>
    <h1>TO-DO</h1>
  </header>

  <nav>
    <ul>
      <li><button type="button">Personal</button></li>
      <li><button type="button">Professional</button></li>
    </ul>
  </nav>

  <form method="POST" class="taskbar">
    <input
      type="text"
      name="nuevaTarea"
      placeholder="What do you want to do?"
      required
    />
    <button type="submit" name="accion" value="agregar">ADD</button>
  </form>

  <main>
    <div class="filtros">
      <form method="POST">
        <button
          type="submit"
          name="filtro"
          value="todas"
        >
          Todas
        </button>
      </form>
      <form method="POST">
        <button
          type="submit"
          name="filtro"
          value="incompletas"
        >
          Incompletas
        </button>
      </form>
      <form method="POST">
        <button
          type="submit"
          name="filtro"
          value="completas"
        >
          Completas
        </button>
      </form>
    </div>

    <div class="lista-tareas">
      {
        obtenerTareasFiltradas().map((tarea, index) => (
          <div class="nueva-tarea tarea-item">
            <form method="POST">
              <input
                type="hidden"
                name="accion"
                value="toggle"
              />
              <input
                type="hidden"
                name="tareaIndex"
                value={index}
              />
              <input
                type="checkbox"
                id={`tarea-${index}`}
                name="completada"
                checked={tarea.completada}
                onchange="this.form.submit()" 
              />
              <label for={`tarea-${index}`}>{tarea.texto}</label>
            </form>
    
            <form method="POST">
              <input
                type="hidden"
                name="accion"
                value="borrar"
              />
              <input
                type="hidden"
                name="tareaIndex"
                value={index}
              />
              <button
                type="submit"
                class="boton-borrar"
              >
                üóëÔ∏è
              </button>
            </form>
          </div>
        ))
      }
    </div>

    <form method="POST">
      <button
        type="submit"
        name="accion"
        value="limpiar"
        id="boton-clear"
      >
        Clear complete
      </button>
    </form>
  </main>
</div>

<style is:global>
  html {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .gestor-tareas {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-family: Arial, Helvetica, sans-serif;
    margin: 0 auto;
    width: 80vw;
    height: 100vh;
    border-radius: 50px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  }

  header h1 {
    font-size: 2rem;
    margin-bottom: 10px;
  }

  nav ul {
    display: flex;
    gap: 20px;
    list-style: none;
    padding: 0;
  }

  nav ul button {
    background-color: white;
    color: black;
    font-size: large;
    border: none;
    padding: 10px 15px;
    cursor: pointer;
    border-bottom: 2px solid black;
    width: 30vw;
  }

  nav ul button:hover {
    background-color: gray;
    color: white;
    border-radius: 5px;
  }

  .taskbar {
    display: flex;
    margin-top: 20px;
  }

  .taskbar input {
    padding: 10px;
    border-radius: 10px 0 0 10px;
    border: 1px solid #ccc;
    width: 40vw;
  }

  .taskbar button {
    padding: 10px 15px;
    border: none;
    background-color: #007bff;
    color: white;
    border-radius: 0 10px 10px 0;
    cursor: pointer;
  }

  .taskbar button:hover {
    background-color: #0056b3;
  }

  main {
    margin-top: 20px;
    width: 50vw;
  }

  .filtros {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-bottom: 20px;
  }

  .filtros button {
    padding: 10px 15px;
    border: none;
    background-color: #007bff;
    color: white;
    border-radius: 5px;
    cursor: pointer;
  }

  .filtros button:hover {
    background-color: #0056b3;
  }

  .nueva-tarea {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 10px;
    padding: 10px;
    background-color: #ffffff;
    margin-bottom: 10px;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    width: 100%;
  }

  .tarea-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 10px;
    padding: 10px;
    background-color: #ffffff;
    margin-bottom: 10px;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    width: 100%;
  }

  .tarea-item input[type="checkbox"] {
    width: 20px;
    height: 20px;
  }

  .tarea-item span {
    flex-grow: 1;
    font-size: 16px;
    color: #333;
  }

  .tarea-item .boton-borrar {
    background-color: #d13b3b;
    border: none;
    color: white;
    border-radius: 5px;
    padding: 5px 10px;
    cursor: pointer;
  }

  .tarea-item .boton-borrar:hover {
    background-color: #a12a2a;
  }

  input[type="checkbox"]:checked + label {
    text-decoration: line-through;
    color: #999;
  }

  .boton-borrar {
    background-color: transparent;
    border: none;
    cursor: pointer;
    font-size: 18px;
    background-color: #d13b3b;
    border-radius: 5px;
    padding: 5px;
  }

  .boton-borrar:hover {
    background-color: #000000;
  }

  #boton-clear {
    margin-top: 10px;
    padding: 10px;
    width: 100%;
    border: none;
    background-color: rgb(167, 141, 141);
    color: white;
    border-radius: 5px;
    cursor: pointer;
  }

  #boton-clear:hover {
    background-color: rgb(82, 54, 54);
  }
</style>
